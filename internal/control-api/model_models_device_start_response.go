/*
Nexodus API

This is the Nexodus API Server.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package control_api

import (
	"encoding/json"
	"time"
)

// checks if the ModelsDeviceStartResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsDeviceStartResponse{}

// ModelsDeviceStartResponse struct for ModelsDeviceStartResponse
type ModelsDeviceStartResponse struct {
	ClientId *string `json:"client_id,omitempty"`
	// TODO: Remove this once golang/oauth2 supports device flow and when coreos/go-oidc adds device_authorization_endpoint discovery
	DeviceAuthorizationEndpoint *string `json:"device_authorization_endpoint,omitempty"`
	Issuer                      *string `json:"issuer,omitempty"`
	// the current time on the server, can be used by a client to get an idea of what the time skew is in relation to the server.
	ServerTime *time.Time `json:"server_time,omitempty"`
}

// NewModelsDeviceStartResponse instantiates a new ModelsDeviceStartResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsDeviceStartResponse() *ModelsDeviceStartResponse {
	this := ModelsDeviceStartResponse{}
	return &this
}

// NewModelsDeviceStartResponseWithDefaults instantiates a new ModelsDeviceStartResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsDeviceStartResponseWithDefaults() *ModelsDeviceStartResponse {
	this := ModelsDeviceStartResponse{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *ModelsDeviceStartResponse) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceStartResponse) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *ModelsDeviceStartResponse) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *ModelsDeviceStartResponse) SetClientId(v string) {
	o.ClientId = &v
}

// GetDeviceAuthorizationEndpoint returns the DeviceAuthorizationEndpoint field value if set, zero value otherwise.
func (o *ModelsDeviceStartResponse) GetDeviceAuthorizationEndpoint() string {
	if o == nil || IsNil(o.DeviceAuthorizationEndpoint) {
		var ret string
		return ret
	}
	return *o.DeviceAuthorizationEndpoint
}

// GetDeviceAuthorizationEndpointOk returns a tuple with the DeviceAuthorizationEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceStartResponse) GetDeviceAuthorizationEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceAuthorizationEndpoint) {
		return nil, false
	}
	return o.DeviceAuthorizationEndpoint, true
}

// HasDeviceAuthorizationEndpoint returns a boolean if a field has been set.
func (o *ModelsDeviceStartResponse) HasDeviceAuthorizationEndpoint() bool {
	if o != nil && !IsNil(o.DeviceAuthorizationEndpoint) {
		return true
	}

	return false
}

// SetDeviceAuthorizationEndpoint gets a reference to the given string and assigns it to the DeviceAuthorizationEndpoint field.
func (o *ModelsDeviceStartResponse) SetDeviceAuthorizationEndpoint(v string) {
	o.DeviceAuthorizationEndpoint = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *ModelsDeviceStartResponse) GetIssuer() string {
	if o == nil || IsNil(o.Issuer) {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceStartResponse) GetIssuerOk() (*string, bool) {
	if o == nil || IsNil(o.Issuer) {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *ModelsDeviceStartResponse) HasIssuer() bool {
	if o != nil && !IsNil(o.Issuer) {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *ModelsDeviceStartResponse) SetIssuer(v string) {
	o.Issuer = &v
}

// GetServerTime returns the ServerTime field value if set, zero value otherwise.
func (o *ModelsDeviceStartResponse) GetServerTime() time.Time {
	if o == nil || IsNil(o.ServerTime) {
		var ret time.Time
		return ret
	}
	return *o.ServerTime
}

// GetServerTimeOk returns a tuple with the ServerTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceStartResponse) GetServerTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ServerTime) {
		return nil, false
	}
	return o.ServerTime, true
}

// HasServerTime returns a boolean if a field has been set.
func (o *ModelsDeviceStartResponse) HasServerTime() bool {
	if o != nil && !IsNil(o.ServerTime) {
		return true
	}

	return false
}

// SetServerTime gets a reference to the given time.Time and assigns it to the ServerTime field.
func (o *ModelsDeviceStartResponse) SetServerTime(v time.Time) {
	o.ServerTime = &v
}

func (o ModelsDeviceStartResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsDeviceStartResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientId) {
		toSerialize["client_id"] = o.ClientId
	}
	if !IsNil(o.DeviceAuthorizationEndpoint) {
		toSerialize["device_authorization_endpoint"] = o.DeviceAuthorizationEndpoint
	}
	if !IsNil(o.Issuer) {
		toSerialize["issuer"] = o.Issuer
	}
	if !IsNil(o.ServerTime) {
		toSerialize["server_time"] = o.ServerTime
	}
	return toSerialize, nil
}

type NullableModelsDeviceStartResponse struct {
	value *ModelsDeviceStartResponse
	isSet bool
}

func (v NullableModelsDeviceStartResponse) Get() *ModelsDeviceStartResponse {
	return v.value
}

func (v *NullableModelsDeviceStartResponse) Set(val *ModelsDeviceStartResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsDeviceStartResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsDeviceStartResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsDeviceStartResponse(val *ModelsDeviceStartResponse) *NullableModelsDeviceStartResponse {
	return &NullableModelsDeviceStartResponse{value: val, isSet: true}
}

func (v NullableModelsDeviceStartResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsDeviceStartResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
