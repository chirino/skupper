/*
Nexodus API

This is the Nexodus API Server.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package control_api

import (
	"encoding/json"
)

// checks if the ModelsUserOrganization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsUserOrganization{}

// ModelsUserOrganization struct for ModelsUserOrganization
type ModelsUserOrganization struct {
	OrganizationId *string     `json:"organization_id,omitempty"`
	Roles          []string    `json:"roles,omitempty"`
	User           *ModelsUser `json:"user,omitempty"`
	UserId         *string     `json:"user_id,omitempty"`
}

// NewModelsUserOrganization instantiates a new ModelsUserOrganization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsUserOrganization() *ModelsUserOrganization {
	this := ModelsUserOrganization{}
	return &this
}

// NewModelsUserOrganizationWithDefaults instantiates a new ModelsUserOrganization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsUserOrganizationWithDefaults() *ModelsUserOrganization {
	this := ModelsUserOrganization{}
	return &this
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ModelsUserOrganization) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUserOrganization) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ModelsUserOrganization) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *ModelsUserOrganization) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *ModelsUserOrganization) GetRoles() []string {
	if o == nil || IsNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUserOrganization) GetRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *ModelsUserOrganization) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *ModelsUserOrganization) SetRoles(v []string) {
	o.Roles = v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ModelsUserOrganization) GetUser() ModelsUser {
	if o == nil || IsNil(o.User) {
		var ret ModelsUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUserOrganization) GetUserOk() (*ModelsUser, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ModelsUserOrganization) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given ModelsUser and assigns it to the User field.
func (o *ModelsUserOrganization) SetUser(v ModelsUser) {
	o.User = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ModelsUserOrganization) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUserOrganization) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ModelsUserOrganization) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *ModelsUserOrganization) SetUserId(v string) {
	o.UserId = &v
}

func (o ModelsUserOrganization) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsUserOrganization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableModelsUserOrganization struct {
	value *ModelsUserOrganization
	isSet bool
}

func (v NullableModelsUserOrganization) Get() *ModelsUserOrganization {
	return v.value
}

func (v *NullableModelsUserOrganization) Set(val *ModelsUserOrganization) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsUserOrganization) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsUserOrganization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsUserOrganization(val *ModelsUserOrganization) *NullableModelsUserOrganization {
	return &NullableModelsUserOrganization{value: val, isSet: true}
}

func (v NullableModelsUserOrganization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsUserOrganization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
