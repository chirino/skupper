/*
Nexodus API

This is the Nexodus API Server.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package control_api

import (
	"encoding/json"
)

// checks if the ModelsWatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsWatch{}

// ModelsWatch struct for ModelsWatch
type ModelsWatch struct {
	AtTail     *bool                  `json:"at_tail,omitempty"`
	GtRevision *int32                 `json:"gt_revision,omitempty"`
	Kind       *string                `json:"kind,omitempty"`
	Options    map[string]interface{} `json:"options,omitempty"`
}

// NewModelsWatch instantiates a new ModelsWatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsWatch() *ModelsWatch {
	this := ModelsWatch{}
	return &this
}

// NewModelsWatchWithDefaults instantiates a new ModelsWatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsWatchWithDefaults() *ModelsWatch {
	this := ModelsWatch{}
	return &this
}

// GetAtTail returns the AtTail field value if set, zero value otherwise.
func (o *ModelsWatch) GetAtTail() bool {
	if o == nil || IsNil(o.AtTail) {
		var ret bool
		return ret
	}
	return *o.AtTail
}

// GetAtTailOk returns a tuple with the AtTail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsWatch) GetAtTailOk() (*bool, bool) {
	if o == nil || IsNil(o.AtTail) {
		return nil, false
	}
	return o.AtTail, true
}

// HasAtTail returns a boolean if a field has been set.
func (o *ModelsWatch) HasAtTail() bool {
	if o != nil && !IsNil(o.AtTail) {
		return true
	}

	return false
}

// SetAtTail gets a reference to the given bool and assigns it to the AtTail field.
func (o *ModelsWatch) SetAtTail(v bool) {
	o.AtTail = &v
}

// GetGtRevision returns the GtRevision field value if set, zero value otherwise.
func (o *ModelsWatch) GetGtRevision() int32 {
	if o == nil || IsNil(o.GtRevision) {
		var ret int32
		return ret
	}
	return *o.GtRevision
}

// GetGtRevisionOk returns a tuple with the GtRevision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsWatch) GetGtRevisionOk() (*int32, bool) {
	if o == nil || IsNil(o.GtRevision) {
		return nil, false
	}
	return o.GtRevision, true
}

// HasGtRevision returns a boolean if a field has been set.
func (o *ModelsWatch) HasGtRevision() bool {
	if o != nil && !IsNil(o.GtRevision) {
		return true
	}

	return false
}

// SetGtRevision gets a reference to the given int32 and assigns it to the GtRevision field.
func (o *ModelsWatch) SetGtRevision(v int32) {
	o.GtRevision = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *ModelsWatch) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsWatch) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *ModelsWatch) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *ModelsWatch) SetKind(v string) {
	o.Kind = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *ModelsWatch) GetOptions() map[string]interface{} {
	if o == nil || IsNil(o.Options) {
		var ret map[string]interface{}
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsWatch) GetOptionsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Options) {
		return map[string]interface{}{}, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *ModelsWatch) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given map[string]interface{} and assigns it to the Options field.
func (o *ModelsWatch) SetOptions(v map[string]interface{}) {
	o.Options = v
}

func (o ModelsWatch) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsWatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AtTail) {
		toSerialize["at_tail"] = o.AtTail
	}
	if !IsNil(o.GtRevision) {
		toSerialize["gt_revision"] = o.GtRevision
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	return toSerialize, nil
}

type NullableModelsWatch struct {
	value *ModelsWatch
	isSet bool
}

func (v NullableModelsWatch) Get() *ModelsWatch {
	return v.value
}

func (v *NullableModelsWatch) Set(val *ModelsWatch) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsWatch) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsWatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsWatch(val *ModelsWatch) *NullableModelsWatch {
	return &NullableModelsWatch{value: val, isSet: true}
}

func (v NullableModelsWatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsWatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
