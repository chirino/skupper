/*
Nexodus API

This is the Nexodus API Server.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package control_api

import (
	"encoding/json"
)

// checks if the ModelsCertificateSigningResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsCertificateSigningResponse{}

// ModelsCertificateSigningResponse struct for ModelsCertificateSigningResponse
type ModelsCertificateSigningResponse struct {
	// The PEM encoded X.509 certificate of the signer, also known as the CA (Certificate Authority). This is set on a best-effort basis by different issuers. If not set, the CA is assumed to be unknown/not available. +optional
	Ca *string `json:"ca,omitempty"`
	// The PEM encoded X.509 certificate resulting from the certificate signing request. If not set, the CertificateRequest has either not been completed or has failed. More information on failure can be found by checking the `conditions` field. +optional
	Certificate *string `json:"certificate,omitempty"`
}

// NewModelsCertificateSigningResponse instantiates a new ModelsCertificateSigningResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsCertificateSigningResponse() *ModelsCertificateSigningResponse {
	this := ModelsCertificateSigningResponse{}
	return &this
}

// NewModelsCertificateSigningResponseWithDefaults instantiates a new ModelsCertificateSigningResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsCertificateSigningResponseWithDefaults() *ModelsCertificateSigningResponse {
	this := ModelsCertificateSigningResponse{}
	return &this
}

// GetCa returns the Ca field value if set, zero value otherwise.
func (o *ModelsCertificateSigningResponse) GetCa() string {
	if o == nil || IsNil(o.Ca) {
		var ret string
		return ret
	}
	return *o.Ca
}

// GetCaOk returns a tuple with the Ca field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateSigningResponse) GetCaOk() (*string, bool) {
	if o == nil || IsNil(o.Ca) {
		return nil, false
	}
	return o.Ca, true
}

// HasCa returns a boolean if a field has been set.
func (o *ModelsCertificateSigningResponse) HasCa() bool {
	if o != nil && !IsNil(o.Ca) {
		return true
	}

	return false
}

// SetCa gets a reference to the given string and assigns it to the Ca field.
func (o *ModelsCertificateSigningResponse) SetCa(v string) {
	o.Ca = &v
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *ModelsCertificateSigningResponse) GetCertificate() string {
	if o == nil || IsNil(o.Certificate) {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateSigningResponse) GetCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.Certificate) {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *ModelsCertificateSigningResponse) HasCertificate() bool {
	if o != nil && !IsNil(o.Certificate) {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *ModelsCertificateSigningResponse) SetCertificate(v string) {
	o.Certificate = &v
}

func (o ModelsCertificateSigningResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsCertificateSigningResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ca) {
		toSerialize["ca"] = o.Ca
	}
	if !IsNil(o.Certificate) {
		toSerialize["certificate"] = o.Certificate
	}
	return toSerialize, nil
}

type NullableModelsCertificateSigningResponse struct {
	value *ModelsCertificateSigningResponse
	isSet bool
}

func (v NullableModelsCertificateSigningResponse) Get() *ModelsCertificateSigningResponse {
	return v.value
}

func (v *NullableModelsCertificateSigningResponse) Set(val *ModelsCertificateSigningResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsCertificateSigningResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsCertificateSigningResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsCertificateSigningResponse(val *ModelsCertificateSigningResponse) *NullableModelsCertificateSigningResponse {
	return &NullableModelsCertificateSigningResponse{value: val, isSet: true}
}

func (v NullableModelsCertificateSigningResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsCertificateSigningResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
