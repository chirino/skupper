/*
Nexodus API

This is the Nexodus API Server.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package control_api

import (
	"encoding/json"
)

// checks if the ModelsAddVPC type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsAddVPC{}

// ModelsAddVPC struct for ModelsAddVPC
type ModelsAddVPC struct {
	Description    *string `json:"description,omitempty"`
	Ipv4Cidr       *string `json:"ipv4_cidr,omitempty"`
	Ipv6Cidr       *string `json:"ipv6_cidr,omitempty"`
	OrganizationId *string `json:"organization_id,omitempty"`
	PrivateCidr    *bool   `json:"private_cidr,omitempty"`
}

// NewModelsAddVPC instantiates a new ModelsAddVPC object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsAddVPC() *ModelsAddVPC {
	this := ModelsAddVPC{}
	return &this
}

// NewModelsAddVPCWithDefaults instantiates a new ModelsAddVPC object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsAddVPCWithDefaults() *ModelsAddVPC {
	this := ModelsAddVPC{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ModelsAddVPC) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAddVPC) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ModelsAddVPC) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ModelsAddVPC) SetDescription(v string) {
	o.Description = &v
}

// GetIpv4Cidr returns the Ipv4Cidr field value if set, zero value otherwise.
func (o *ModelsAddVPC) GetIpv4Cidr() string {
	if o == nil || IsNil(o.Ipv4Cidr) {
		var ret string
		return ret
	}
	return *o.Ipv4Cidr
}

// GetIpv4CidrOk returns a tuple with the Ipv4Cidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAddVPC) GetIpv4CidrOk() (*string, bool) {
	if o == nil || IsNil(o.Ipv4Cidr) {
		return nil, false
	}
	return o.Ipv4Cidr, true
}

// HasIpv4Cidr returns a boolean if a field has been set.
func (o *ModelsAddVPC) HasIpv4Cidr() bool {
	if o != nil && !IsNil(o.Ipv4Cidr) {
		return true
	}

	return false
}

// SetIpv4Cidr gets a reference to the given string and assigns it to the Ipv4Cidr field.
func (o *ModelsAddVPC) SetIpv4Cidr(v string) {
	o.Ipv4Cidr = &v
}

// GetIpv6Cidr returns the Ipv6Cidr field value if set, zero value otherwise.
func (o *ModelsAddVPC) GetIpv6Cidr() string {
	if o == nil || IsNil(o.Ipv6Cidr) {
		var ret string
		return ret
	}
	return *o.Ipv6Cidr
}

// GetIpv6CidrOk returns a tuple with the Ipv6Cidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAddVPC) GetIpv6CidrOk() (*string, bool) {
	if o == nil || IsNil(o.Ipv6Cidr) {
		return nil, false
	}
	return o.Ipv6Cidr, true
}

// HasIpv6Cidr returns a boolean if a field has been set.
func (o *ModelsAddVPC) HasIpv6Cidr() bool {
	if o != nil && !IsNil(o.Ipv6Cidr) {
		return true
	}

	return false
}

// SetIpv6Cidr gets a reference to the given string and assigns it to the Ipv6Cidr field.
func (o *ModelsAddVPC) SetIpv6Cidr(v string) {
	o.Ipv6Cidr = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ModelsAddVPC) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAddVPC) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ModelsAddVPC) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *ModelsAddVPC) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetPrivateCidr returns the PrivateCidr field value if set, zero value otherwise.
func (o *ModelsAddVPC) GetPrivateCidr() bool {
	if o == nil || IsNil(o.PrivateCidr) {
		var ret bool
		return ret
	}
	return *o.PrivateCidr
}

// GetPrivateCidrOk returns a tuple with the PrivateCidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAddVPC) GetPrivateCidrOk() (*bool, bool) {
	if o == nil || IsNil(o.PrivateCidr) {
		return nil, false
	}
	return o.PrivateCidr, true
}

// HasPrivateCidr returns a boolean if a field has been set.
func (o *ModelsAddVPC) HasPrivateCidr() bool {
	if o != nil && !IsNil(o.PrivateCidr) {
		return true
	}

	return false
}

// SetPrivateCidr gets a reference to the given bool and assigns it to the PrivateCidr field.
func (o *ModelsAddVPC) SetPrivateCidr(v bool) {
	o.PrivateCidr = &v
}

func (o ModelsAddVPC) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsAddVPC) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Ipv4Cidr) {
		toSerialize["ipv4_cidr"] = o.Ipv4Cidr
	}
	if !IsNil(o.Ipv6Cidr) {
		toSerialize["ipv6_cidr"] = o.Ipv6Cidr
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !IsNil(o.PrivateCidr) {
		toSerialize["private_cidr"] = o.PrivateCidr
	}
	return toSerialize, nil
}

type NullableModelsAddVPC struct {
	value *ModelsAddVPC
	isSet bool
}

func (v NullableModelsAddVPC) Get() *ModelsAddVPC {
	return v.value
}

func (v *NullableModelsAddVPC) Set(val *ModelsAddVPC) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsAddVPC) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsAddVPC) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsAddVPC(val *ModelsAddVPC) *NullableModelsAddVPC {
	return &NullableModelsAddVPC{value: val, isSet: true}
}

func (v NullableModelsAddVPC) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsAddVPC) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
