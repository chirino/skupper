/*
Nexodus API

This is the Nexodus API Server.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package control_api

import (
	"encoding/json"
)

// checks if the ModelsAddSecurityGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsAddSecurityGroup{}

// ModelsAddSecurityGroup struct for ModelsAddSecurityGroup
type ModelsAddSecurityGroup struct {
	Description   *string              `json:"description,omitempty"`
	InboundRules  []ModelsSecurityRule `json:"inbound_rules,omitempty"`
	OutboundRules []ModelsSecurityRule `json:"outbound_rules,omitempty"`
	VpcId         *string              `json:"vpc_id,omitempty"`
}

// NewModelsAddSecurityGroup instantiates a new ModelsAddSecurityGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsAddSecurityGroup() *ModelsAddSecurityGroup {
	this := ModelsAddSecurityGroup{}
	return &this
}

// NewModelsAddSecurityGroupWithDefaults instantiates a new ModelsAddSecurityGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsAddSecurityGroupWithDefaults() *ModelsAddSecurityGroup {
	this := ModelsAddSecurityGroup{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ModelsAddSecurityGroup) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAddSecurityGroup) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ModelsAddSecurityGroup) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ModelsAddSecurityGroup) SetDescription(v string) {
	o.Description = &v
}

// GetInboundRules returns the InboundRules field value if set, zero value otherwise.
func (o *ModelsAddSecurityGroup) GetInboundRules() []ModelsSecurityRule {
	if o == nil || IsNil(o.InboundRules) {
		var ret []ModelsSecurityRule
		return ret
	}
	return o.InboundRules
}

// GetInboundRulesOk returns a tuple with the InboundRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAddSecurityGroup) GetInboundRulesOk() ([]ModelsSecurityRule, bool) {
	if o == nil || IsNil(o.InboundRules) {
		return nil, false
	}
	return o.InboundRules, true
}

// HasInboundRules returns a boolean if a field has been set.
func (o *ModelsAddSecurityGroup) HasInboundRules() bool {
	if o != nil && !IsNil(o.InboundRules) {
		return true
	}

	return false
}

// SetInboundRules gets a reference to the given []ModelsSecurityRule and assigns it to the InboundRules field.
func (o *ModelsAddSecurityGroup) SetInboundRules(v []ModelsSecurityRule) {
	o.InboundRules = v
}

// GetOutboundRules returns the OutboundRules field value if set, zero value otherwise.
func (o *ModelsAddSecurityGroup) GetOutboundRules() []ModelsSecurityRule {
	if o == nil || IsNil(o.OutboundRules) {
		var ret []ModelsSecurityRule
		return ret
	}
	return o.OutboundRules
}

// GetOutboundRulesOk returns a tuple with the OutboundRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAddSecurityGroup) GetOutboundRulesOk() ([]ModelsSecurityRule, bool) {
	if o == nil || IsNil(o.OutboundRules) {
		return nil, false
	}
	return o.OutboundRules, true
}

// HasOutboundRules returns a boolean if a field has been set.
func (o *ModelsAddSecurityGroup) HasOutboundRules() bool {
	if o != nil && !IsNil(o.OutboundRules) {
		return true
	}

	return false
}

// SetOutboundRules gets a reference to the given []ModelsSecurityRule and assigns it to the OutboundRules field.
func (o *ModelsAddSecurityGroup) SetOutboundRules(v []ModelsSecurityRule) {
	o.OutboundRules = v
}

// GetVpcId returns the VpcId field value if set, zero value otherwise.
func (o *ModelsAddSecurityGroup) GetVpcId() string {
	if o == nil || IsNil(o.VpcId) {
		var ret string
		return ret
	}
	return *o.VpcId
}

// GetVpcIdOk returns a tuple with the VpcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAddSecurityGroup) GetVpcIdOk() (*string, bool) {
	if o == nil || IsNil(o.VpcId) {
		return nil, false
	}
	return o.VpcId, true
}

// HasVpcId returns a boolean if a field has been set.
func (o *ModelsAddSecurityGroup) HasVpcId() bool {
	if o != nil && !IsNil(o.VpcId) {
		return true
	}

	return false
}

// SetVpcId gets a reference to the given string and assigns it to the VpcId field.
func (o *ModelsAddSecurityGroup) SetVpcId(v string) {
	o.VpcId = &v
}

func (o ModelsAddSecurityGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsAddSecurityGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.InboundRules) {
		toSerialize["inbound_rules"] = o.InboundRules
	}
	if !IsNil(o.OutboundRules) {
		toSerialize["outbound_rules"] = o.OutboundRules
	}
	if !IsNil(o.VpcId) {
		toSerialize["vpc_id"] = o.VpcId
	}
	return toSerialize, nil
}

type NullableModelsAddSecurityGroup struct {
	value *ModelsAddSecurityGroup
	isSet bool
}

func (v NullableModelsAddSecurityGroup) Get() *ModelsAddSecurityGroup {
	return v.value
}

func (v *NullableModelsAddSecurityGroup) Set(val *ModelsAddSecurityGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsAddSecurityGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsAddSecurityGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsAddSecurityGroup(val *ModelsAddSecurityGroup) *NullableModelsAddSecurityGroup {
	return &NullableModelsAddSecurityGroup{value: val, isSet: true}
}

func (v NullableModelsAddSecurityGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsAddSecurityGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
