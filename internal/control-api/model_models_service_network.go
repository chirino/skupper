/*
Nexodus API

This is the Nexodus API Server.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package control_api

import (
	"encoding/json"
)

// checks if the ModelsServiceNetwork type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsServiceNetwork{}

// ModelsServiceNetwork struct for ModelsServiceNetwork
type ModelsServiceNetwork struct {
	CaCertificates []string `json:"ca_certificates,omitempty"`
	Description    *string  `json:"description,omitempty"`
	Id             *string  `json:"id,omitempty"`
	OrganizationId *string  `json:"organization_id,omitempty"`
	Revision       *int32   `json:"revision,omitempty"`
}

// NewModelsServiceNetwork instantiates a new ModelsServiceNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsServiceNetwork() *ModelsServiceNetwork {
	this := ModelsServiceNetwork{}
	return &this
}

// NewModelsServiceNetworkWithDefaults instantiates a new ModelsServiceNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsServiceNetworkWithDefaults() *ModelsServiceNetwork {
	this := ModelsServiceNetwork{}
	return &this
}

// GetCaCertificates returns the CaCertificates field value if set, zero value otherwise.
func (o *ModelsServiceNetwork) GetCaCertificates() []string {
	if o == nil || IsNil(o.CaCertificates) {
		var ret []string
		return ret
	}
	return o.CaCertificates
}

// GetCaCertificatesOk returns a tuple with the CaCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsServiceNetwork) GetCaCertificatesOk() ([]string, bool) {
	if o == nil || IsNil(o.CaCertificates) {
		return nil, false
	}
	return o.CaCertificates, true
}

// HasCaCertificates returns a boolean if a field has been set.
func (o *ModelsServiceNetwork) HasCaCertificates() bool {
	if o != nil && !IsNil(o.CaCertificates) {
		return true
	}

	return false
}

// SetCaCertificates gets a reference to the given []string and assigns it to the CaCertificates field.
func (o *ModelsServiceNetwork) SetCaCertificates(v []string) {
	o.CaCertificates = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ModelsServiceNetwork) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsServiceNetwork) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ModelsServiceNetwork) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ModelsServiceNetwork) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsServiceNetwork) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsServiceNetwork) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsServiceNetwork) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsServiceNetwork) SetId(v string) {
	o.Id = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ModelsServiceNetwork) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsServiceNetwork) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ModelsServiceNetwork) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *ModelsServiceNetwork) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *ModelsServiceNetwork) GetRevision() int32 {
	if o == nil || IsNil(o.Revision) {
		var ret int32
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsServiceNetwork) GetRevisionOk() (*int32, bool) {
	if o == nil || IsNil(o.Revision) {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *ModelsServiceNetwork) HasRevision() bool {
	if o != nil && !IsNil(o.Revision) {
		return true
	}

	return false
}

// SetRevision gets a reference to the given int32 and assigns it to the Revision field.
func (o *ModelsServiceNetwork) SetRevision(v int32) {
	o.Revision = &v
}

func (o ModelsServiceNetwork) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsServiceNetwork) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CaCertificates) {
		toSerialize["ca_certificates"] = o.CaCertificates
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !IsNil(o.Revision) {
		toSerialize["revision"] = o.Revision
	}
	return toSerialize, nil
}

type NullableModelsServiceNetwork struct {
	value *ModelsServiceNetwork
	isSet bool
}

func (v NullableModelsServiceNetwork) Get() *ModelsServiceNetwork {
	return v.value
}

func (v *NullableModelsServiceNetwork) Set(val *ModelsServiceNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsServiceNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsServiceNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsServiceNetwork(val *ModelsServiceNetwork) *NullableModelsServiceNetwork {
	return &NullableModelsServiceNetwork{value: val, isSet: true}
}

func (v NullableModelsServiceNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsServiceNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
